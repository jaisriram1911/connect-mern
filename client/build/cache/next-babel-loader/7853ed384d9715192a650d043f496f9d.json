{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { DISQUS_SHORTNAME, DOMAIN } from '../config';\nvar SHORTNAME = DISQUS_SHORTNAME;\nvar WEBSITE_URL = DOMAIN;\n\nfunction renderDisqus() {\n  if (window.DISQUS === undefined) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.src = 'https://' + SHORTNAME + '.disqus.com/embed.js';\n    document.getElementsByTagName('head')[0].appendChild(script);\n  } else {\n    window.DISQUS.reset({\n      reload: true\n    });\n  }\n}\n\nvar DisqusThread = /*#__PURE__*/function (_React$Component) {\n  _inherits(DisqusThread, _React$Component);\n\n  var _super = _createSuper(DisqusThread);\n\n  function DisqusThread() {\n    _classCallCheck(this, DisqusThread);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DisqusThread, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return this.props.id !== nextProps.id || this.props.title !== nextProps.title || this.props.path !== nextProps.path;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      renderDisqus();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      renderDisqus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          id = _this$props.id,\n          title = _this$props.title,\n          path = _this$props.path,\n          other = _objectWithoutProperties(_this$props, [\"id\", \"title\", \"path\"]);\n\n      if (process.env.BROWSER) {\n        window.disqus_shortname = SHORTNAME;\n        window.disqus_identifier = id;\n        window.disqus_title = title;\n        window.disqus_url = WEBSITE_URL + path;\n      }\n\n      return __jsx(\"div\", _extends({}, other, {\n        id: \"disqus_thread\"\n      }));\n    }\n  }]);\n\n  return DisqusThread;\n}(React.Component);\n\nexport default DisqusThread;","map":null,"metadata":{},"sourceType":"module"}