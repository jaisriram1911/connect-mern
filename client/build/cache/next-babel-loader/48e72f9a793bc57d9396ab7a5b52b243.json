{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\nimport Layout from '../components/Layout';\nimport { useState } from 'react';\nimport { listBlog } from '../actions/blogAction';\nimport Card from '../components/blog/Card';\nimport { DOMAIN } from '../config';\n\nconst Blogs = ({\n  blogs,\n  categories,\n  tags,\n  blogLimit,\n  blogSkip,\n  totalBlog,\n  router\n}) => {\n  const head = () => __jsx(Head, null, __jsx(\"title\", null, \"Connect\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"Programing Blog by jaisriram\"\n  }), __jsx(\"link\", {\n    rel: \"canonical\",\n    href: `${DOMAIN}${router.pathname}`\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `Blog App | Latest Web development Blog`\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: \"Programing Blog by jaisriram\"\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"website\"\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `${DOMAIN}${router.pathname}`\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: `${DOMAIN}/static/images/blogimage.jpg`\n  }), __jsx(\"meta\", {\n    property: \"og:site_name\",\n    content: \"Blog App\"\n  }), __jsx(\"meta\", {\n    property: \"og:image:secure_url\",\n    content: `${DOMAIN}/static/images/blogimage.jpg`\n  }), __jsx(\"meta\", {\n    property: \"og:image:type\",\n    content: \"image/jpg\"\n  }));\n\n  const {\n    0: limit,\n    1: setLimit\n  } = useState(blogLimit);\n  const {\n    0: skip,\n    1: setSkip\n  } = useState(0);\n  const {\n    0: size,\n    1: setSize\n  } = useState(totalBlog);\n  const {\n    0: loadedBlog,\n    1: setLoadedBlog\n  } = useState([]);\n\n  const loadMore = () => {\n    let toSkip = skip + limit;\n    listBlog(toSkip, limit).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setLoadedBlog([...loadedBlog, ...data.blogs]);\n        setSize(data.size);\n        setSkip(toSkip);\n      }\n    });\n  };\n\n  const loadButton = () => {\n    return size > 0 && size >= limit && __jsx(\"button\", {\n      onClick: loadMore,\n      className: \"btn btn-primary\"\n    }, \"Load More\");\n  };\n\n  const ShowLoadedBlogs = () => {\n    return loadedBlog.map((blog, i) => __jsx(\"article\", {\n      key: i\n    }, __jsx(Card, {\n      blog: blog\n    }), __jsx(\"hr\", null)));\n  };\n\n  const showAllBlogs = () => {\n    return blogs.map((blog, i) => {\n      return __jsx(\"article\", {\n        key: i\n      }, __jsx(Card, {\n        blog: blog\n      }));\n    });\n  };\n\n  const showAllCategories = () => categories.map((c, i) => __jsx(Link, {\n    className: \"category-nav-items\",\n    href: `/categories/${c.slug}`\n  }, __jsx(\"a\", {\n    className: \"btn btn-primary btn-sm mr-1 ml-1 mt-3\"\n  }, c.name)));\n\n  return __jsx(React.Fragment, null, head(), __jsx(Layout, null, __jsx(\"main\", null, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"header\", null, __jsx(\"div\", {\n    className: \"col-md-12 pt-3\"\n  }, __jsx(\"h1\", {\n    className: \"display-5 mt-5 mb-5 font-weight-bold text-center\",\n    style: {\n      color: '#363636'\n    }\n  }, \"Programming Blog\", __jsx(\"div\", null, showAllCategories()))))), __jsx(\"div\", {\n    className: \"container\"\n  }, showAllBlogs()), __jsx(\"div\", {\n    className: \"container\"\n  }, ShowLoadedBlogs()), __jsx(\"div\", {\n    className: \"text-center pt-5 pb-5\"\n  }, loadButton()))));\n};\n\nBlogs.getInitialProps = () => {\n  let limit = 6;\n  let skip = 0;\n  return listBlog(skip, limit).then(data => {\n    if (data.error) {\n      console.log(data.error);\n    } else {\n      return {\n        blogs: data.blogs,\n        categories: data.categories,\n        tags: data.tags,\n        blogLimit: limit,\n        blogSkip: skip,\n        totalBlog: data.size\n      };\n    }\n  });\n};\n\nexport default withRouter(Blogs);","map":null,"metadata":{},"sourceType":"module"}