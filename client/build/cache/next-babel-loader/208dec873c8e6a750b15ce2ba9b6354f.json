{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport Layout from '../../../../components/Layout';\nimport jwt from 'jsonwebtoken';\nimport { withRouter } from 'next/router';\nimport { signup } from '../../../../actions/auth';\nimport Message from '../../../../components/message/Message';\n\nconst AccountActivation = ({\n  router\n}) => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: '',\n    token: '',\n    error: '',\n    message: '',\n    loading: false,\n    showSignUpButton: true\n  });\n  const {\n    showSignUpButton,\n    loading,\n    name,\n    token,\n    error,\n    message\n  } = values;\n  useEffect(() => {\n    let token = router.query.id;\n\n    if (token) {\n      const {\n        name\n      } = jwt.decode(token);\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        name,\n        token\n      }));\n    }\n  }, [router]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    signup({\n      token\n    }).then(data => {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error,\n          loading: false\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          loading: false,\n          message: data.message,\n          showSignUpButton: false\n        }));\n      }\n    });\n  };\n\n  const showButton = () => {\n    return __jsx(\"div\", null, __jsx(\"button\", {\n      type: \"submit\",\n      onClick: handleSubmit,\n      className: \"btn btn-primary\"\n    }, \"Activate your account\"));\n  };\n\n  const showError = () => error ? __jsx(Message, {\n    name: error,\n    styles: \"alert-danger\"\n  }) : \"\";\n\n  const showLoading = () => loading ? __jsx(Message, {\n    name: \"Loading\",\n    styles: \"alert-info\"\n  }) : \"\";\n\n  const showMessage = () => message ? __jsx(Message, {\n    name: message,\n    styles: \"alert-success\"\n  }) : \"\";\n\n  return __jsx(React.Fragment, null, showMessage(), showLoading(), showError(), __jsx(Layout, null, __jsx(\"div\", {\n    className: \"container mt-5\",\n    style: {\n      alignItems: 'center',\n      textAlign: 'center'\n    }\n  }, __jsx(\"h4\", {\n    className: \"mt-5 mb-5\"\n  }, \"Hi! , \", name, \" Activate Your Account.\"), showSignUpButton && showButton())));\n};\n\nexport default withRouter(AccountActivation);","map":null,"metadata":{},"sourceType":"module"}