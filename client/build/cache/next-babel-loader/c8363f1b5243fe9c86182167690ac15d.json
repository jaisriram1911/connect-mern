{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from 'react';\nimport Router from 'next/router';\nimport { getCookie, updateUser } from '../../actions/auth';\nimport { update, getProfile } from '../../actions/user';\nimport Message from '../message/Message';\nimport { API } from '../../config';\nimport './ProfileUpdate.css';\n\nvar ProfileUpdate = function ProfileUpdate() {\n  var _useState = useState({\n    name: '',\n    username: '',\n    username_for_photo: '',\n    about: '',\n    password: '',\n    error: false,\n    success: false,\n    loading: false,\n    userData: true && new FormData(),\n    photo: '',\n    email: ''\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var name = values.name,\n      email = values.email,\n      username = values.username,\n      username_for_photo = values.username_for_photo,\n      about = values.about,\n      password = values.password,\n      error = values.error,\n      success = values.success,\n      loading = values.loading,\n      userData = values.userData,\n      photo = values.photo;\n  var token = getCookie('token');\n\n  var init = function init() {\n    return getProfile(token).then(function (data) {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          username_for_photo: data.username,\n          name: data.name,\n          email: data.email,\n          about: data.about,\n          password: data.password,\n          username: data.username\n        }));\n      }\n    });\n  };\n\n  useEffect(function () {\n    init();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      userData: new FormData()\n    }));\n  }, []);\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    update(token, userData).then(function (data) {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error,\n          loading: false\n        }));\n      } else {\n        updateUser(data, function () {\n          setValues(_objectSpread(_objectSpread({}, values), {}, {\n            username: data.username,\n            name: data.name,\n            email: data.email,\n            about: data.about,\n            password: '',\n            success: true,\n            loading: false\n          }));\n        });\n        Router.push(\"/profile/\".concat(username));\n      }\n    });\n  };\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      var _console, _objectSpread2;\n\n      var value = name === 'photo' ? e.target.files[0] : e.target.value;\n      userData.set(name, value);\n\n      (_console = console).log.apply(_console, _toConsumableArray(userData));\n\n      setValues(_objectSpread(_objectSpread({}, values), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, value), _defineProperty(_objectSpread2, \"userData\", userData), _defineProperty(_objectSpread2, \"error\", false), _defineProperty(_objectSpread2, \"success\", false), _objectSpread2)));\n    };\n  };\n\n  var profileForm = function profileForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      className: \"text-muted\"\n    }, \"User Name\"), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      onChange: handleChange(\"username\"),\n      value: username\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      className: \"text-muted\"\n    }, \"Name\"), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      onChange: handleChange(\"name\"),\n      value: name\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      className: \"text-muted\"\n    }, \"Email\"), __jsx(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      onChange: handleChange(\"email\"),\n      value: email\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      className: \"text-muted\"\n    }, \"Password\"), __jsx(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      onChange: handleChange(\"password\"),\n      value: password\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      className: \"text-muted\"\n    }, \"About\"), __jsx(\"textarea\", {\n      type: \"text\",\n      className: \"form-control\",\n      onChange: handleChange(\"about\"),\n      value: about\n    })), __jsx(\"div\", null, __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-dark\"\n    }, \"Submit\")));\n  };\n\n  var showLoading = function showLoading() {\n    return loading ? __jsx(Message, {\n      name: \"Loading...\",\n      styles: \"alert-info\"\n    }) : '';\n  };\n\n  var showError = function showError() {\n    return error ? __jsx(Message, {\n      name: error,\n      styles: \"alert-danger\"\n    }) : '';\n  };\n\n  var showMessage = function showMessage() {\n    return success ? __jsx(Message, {\n      name: \"Profile is updated Successfully!\",\n      styles: \"alert-success\"\n    }) : '';\n  };\n\n  return __jsx(React.Fragment, null, showMessage(), showError(), showLoading(), __jsx(\"div\", {\n    className: \"profile-update\"\n  }, __jsx(\"div\", {\n    className: \"profile-update_user-image\"\n  }, __jsx(\"img\", {\n    src: \"\".concat(API, \"/user/photo/\").concat(username_for_photo),\n    alt: username_for_photo\n  }), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"btn btn-dark btn-block btn-sm\"\n  }, \"Upload Image\", __jsx(\"input\", {\n    onChange: handleChange('photo'),\n    hidden: true,\n    accept: \"image/*\",\n    type: \"file\"\n  })))), __jsx(\"div\", {\n    className: \"profile-update_user-info\"\n  }, profileForm())));\n};\n\nexport default ProfileUpdate;","map":null,"metadata":{},"sourceType":"module"}