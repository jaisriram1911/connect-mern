{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport Layout from '../../../../components/Layout';\nimport { withRouter } from 'next/router';\nimport { resetPassword } from '../../../../actions/auth';\nimport Message from '../../../../components/message/Message';\n\nvar ResetPassword = function ResetPassword(_ref) {\n  var router = _ref.router;\n\n  var _useState = useState({\n    resetPasswordLink: '',\n    newPassword: '',\n    error: '',\n    message: '',\n    loading: false,\n    showForm: true\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var showForm = values.showForm,\n      loading = values.loading,\n      resetPasswordLink = values.resetPasswordLink,\n      newPassword = values.newPassword,\n      error = values.error,\n      message = values.message;\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    resetPassword({\n      newPassword: newPassword,\n      resetPasswordLink: router.query.id\n    }).then(function (data) {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error,\n          showForm: false,\n          newPassword: '',\n          loading: false\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          message: data.message,\n          showForm: false,\n          newPassword: '',\n          error: false,\n          loading: false\n        }));\n      }\n    });\n  };\n\n  var passwordResetForm = function passwordResetForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit\n    }, __jsx(\"div\", {\n      className: \"form-group pt-5\"\n    }, __jsx(\"input\", {\n      type: \"password\",\n      onChange: function onChange(e) {\n        return setValues(_objectSpread(_objectSpread({}, values), {}, {\n          newPassword: e.target.value\n        }));\n      },\n      className: \"form-control\",\n      value: newPassword,\n      placeholder: \"Type new password\",\n      required: true\n    })), __jsx(\"div\", null, __jsx(\"button\", {\n      className: \"btn btn-primary\"\n    }, \"Change password\")));\n  };\n\n  var showError = function showError() {\n    return error ? __jsx(Message, {\n      name: error,\n      styles: \"alert-danger\"\n    }) : \"\";\n  };\n\n  var showLoading = function showLoading() {\n    return loading ? __jsx(Message, {\n      name: \"Loading\",\n      styles: \"alert-info\"\n    }) : \"\";\n  };\n\n  var showMessage = function showMessage() {\n    return message ? __jsx(Message, {\n      name: message,\n      styles: \"alert-success\"\n    }) : \"\";\n  };\n\n  return __jsx(React.Fragment, null, showLoading(), showError(), showMessage(), __jsx(Layout, null, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"h2\", null, \"Reset password\"), __jsx(\"hr\", null), passwordResetForm())));\n};\n\nexport default withRouter(ResetPassword);","map":null,"metadata":{},"sourceType":"module"}