{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { getCookie } from '../../actions/auth';\nimport { create, getTags, removeTags } from '../../actions/tagAction';\n\nvar Tag = function Tag() {\n  var _useState = useState({\n    name: '',\n    error: false,\n    success: false,\n    tags: [],\n    removed: false,\n    reload: false\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var name = values.name,\n      error = values.error,\n      success = values.success,\n      tags = values.tags,\n      removed = values.removed,\n      reload = values.reload;\n  var token = getCookie('token');\n  useEffect(function () {\n    loadTags();\n  }, [reload]);\n\n  var loadTags = function loadTags() {\n    getTags().then(function (data) {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          tags: data\n        }));\n      }\n    });\n  };\n\n  var showTags = function showTags() {\n    return tags.map(function (c, i) {\n      return __jsx(\"button\", {\n        onDoubleClick: function onDoubleClick() {\n          return deleteConfirm(c.slug);\n        },\n        title: \"Double click to delete\",\n        key: i,\n        className: \"btn btn-outline-primary mr-1 ml-1 mt-3\"\n      }, c.name);\n    });\n  };\n\n  var deleteConfirm = function deleteConfirm(slug) {\n    var answer = window.confirm('Are you sure you want to delete this Tag?');\n\n    if (answer) {\n      deleteTag(slug);\n    }\n  };\n\n  var deleteTag = function deleteTag(slug) {\n    // console.log('delete', slug);\n    removeTags(slug, token).then(function (data) {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: false,\n          success: false,\n          name: '',\n          removed: !removed,\n          reload: !reload\n        }));\n      }\n    });\n  };\n\n  var clickSubmit = function clickSubmit(e) {\n    e.preventDefault(); // console.log('create category', name);\n\n    create({\n      name: name\n    }, token).then(function (data) {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error,\n          success: false\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: false,\n          success: true,\n          name: '',\n          removed: '',\n          reload: !reload\n        }));\n      }\n    });\n  };\n\n  var handleChange = function handleChange(e) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      name: e.target.value,\n      error: false,\n      success: false,\n      removed: ''\n    }));\n  };\n\n  var showSuccess = function showSuccess() {\n    if (success) {\n      return __jsx(\"p\", {\n        className: \"text-success\"\n      }, \"Tag is created!\");\n    }\n  };\n\n  var showError = function showError() {\n    if (error) {\n      return __jsx(\"p\", {\n        className: \"text-danger\"\n      }, \"Tag already exist!\");\n    }\n  };\n\n  var showRemoved = function showRemoved() {\n    if (removed) {\n      return __jsx(\"p\", {\n        className: \"text-danger\"\n      }, \"Tag is removed!\");\n    }\n  };\n\n  var mouseMoveHandler = function mouseMoveHandler(e) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      error: false,\n      success: false,\n      removed: ''\n    }));\n  };\n\n  var newTagFom = function newTagFom() {\n    return __jsx(\"form\", {\n      onSubmit: clickSubmit\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      className: \"text-muted\"\n    }, \"Name\"), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      onChange: handleChange,\n      value: name,\n      required: true\n    })), __jsx(\"div\", null, __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\"\n    }, \"Create\")));\n  };\n\n  return __jsx(React.Fragment, null, showSuccess(), showError(), showRemoved(), __jsx(\"div\", {\n    onMouseMove: mouseMoveHandler\n  }, newTagFom(), showTags()));\n};\n\nexport default Tag;","map":null,"metadata":{},"sourceType":"module"}